/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VideoClub;

import java.awt.TextArea;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author arouven
 */
public class MovieForm extends javax.swing.JFrame {

    /**
     * Creates new form MovieForm
     */
    public MovieForm() {
        initComponents();
        this.setTitle("Movie Form");
        setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exitButton = new javax.swing.JButton();
        mainMenuButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        addMovieButton = new javax.swing.JButton();
        displayAllMovieButton = new javax.swing.JButton();
        searchMovieButton = new javax.swing.JButton();
        updateMovieButton = new javax.swing.JButton();
        deleteMovieButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        mainMenuButton.setText("Main Menu");
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movie Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 24))); // NOI18N

        addMovieButton.setText("Add Movie");
        addMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieButtonActionPerformed(evt);
            }
        });

        displayAllMovieButton.setText("Display all movie");
        displayAllMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllMovieButtonActionPerformed(evt);
            }
        });

        searchMovieButton.setText("Search by Name");
        searchMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMovieButtonActionPerformed(evt);
            }
        });

        updateMovieButton.setText("Update Movie");
        updateMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMovieButtonActionPerformed(evt);
            }
        });

        deleteMovieButton.setText("Delete Movie");
        deleteMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMovieButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addMovieButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayAllMovieButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchMovieButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateMovieButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteMovieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addMovieButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayAllMovieButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchMovieButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateMovieButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteMovieButton)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(mainMenuButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    private void addMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieButtonActionPerformed
        AddMovieForm addMovie = new AddMovieForm();
        addMovie.setVisible(true);
    }//GEN-LAST:event_addMovieButtonActionPerformed

    private void displayAllMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllMovieButtonActionPerformed
        TextArea mDetails = new TextArea();
        String outputText = "";
        outputText = MainMenu.movArray.stream().map((mov) -> mov.displayMovieDetails()).reduce(outputText, String::concat);
        mDetails.setText(outputText);
        JOptionPane.showMessageDialog(this, mDetails, "Movies Details", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_displayAllMovieButtonActionPerformed

    private void searchMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMovieButtonActionPerformed
        String movNameToSearch = JOptionPane.showInputDialog(this, "Search the movie(name): ", "Movie Name", JOptionPane.INFORMATION_MESSAGE);
        if (movNameToSearch != null) {
            int currentPosition = 0;
            for(Movie mov: MainMenu.movArray){
                String movName = mov.getMovieName();
                if(movNameToSearch.equals(movName)){
                    TextArea mDetails = new TextArea();
                    mDetails.setText(mov.displayMovieDetails());
                    JOptionPane.showMessageDialog(this, mDetails, "Movie Detail", JOptionPane.INFORMATION_MESSAGE);

                    return;
                }
                currentPosition ++;
            }

            System.out.println("current " + currentPosition);
            System.out.println("size " + MainMenu.movArray.size());

            if(currentPosition > MainMenu.movArray.size()-1){
                JOptionPane.showMessageDialog(this, "Movie " + movNameToSearch + " Not Found!", "Not Found", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            System.out.println("cancel is pressed");
        }
    }//GEN-LAST:event_searchMovieButtonActionPerformed

    private void updateMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMovieButtonActionPerformed
        String movNameToSearch = JOptionPane.showInputDialog(this, "Search the movie(name) to update: ", "Movie Name", JOptionPane.INFORMATION_MESSAGE);
        if (movNameToSearch != null) {
            int currentPosition = 0;
            for(Movie mov : MainMenu.movArray){
                String movName = mov.getMovieName();
                if(movNameToSearch.equals(movName)){
                    UpdateMovieForm updateMovie = new UpdateMovieForm(currentPosition);
                    updateMovie.setVisible(true);
                    System.out.println(currentPosition);
                    return;
                }
                currentPosition ++;
            }
            if(currentPosition > MainMenu.movArray.size()-1){
                JOptionPane.showMessageDialog(this, "Movie " + movNameToSearch + " Not Found!", "Not Found", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            System.out.println("cancel is pressed.");
        }
    }//GEN-LAST:event_updateMovieButtonActionPerformed

    private void deleteMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMovieButtonActionPerformed
        String movNameToSearch = JOptionPane.showInputDialog(this, "Search the movie(name) to delete: ", "Movie Name", JOptionPane.INFORMATION_MESSAGE);
        if (movNameToSearch != null) {
            int currentPosition = 0;
            for(Movie mov: MainMenu.movArray){
                String movName = mov.getMovieName();
                if(movNameToSearch.equals(movName)){
                    int descision = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this movie: " + movName + " ?","Delete Movie", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

                    if(descision == 0){
                        MainMenu.movArray.remove(currentPosition);
                        System.out.println("deleted");
                        JOptionPane.showMessageDialog(this, movName + " was deleted.", "Movie Deleted", JOptionPane.DEFAULT_OPTION);
                        return;//exit the button function
                    }
                    else{
                        System.out.println("do nothing");
                    }
                    break;
                }
                currentPosition ++;
            }

            System.out.println("current " + currentPosition);
            System.out.println("size " + MainMenu.movArray.size());

            if(currentPosition > MainMenu.movArray.size()-1){
                JOptionPane.showMessageDialog(this, "Movie " + movNameToSearch + " Not Found!", "Not Found", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            System.out.println("cancel is pressed.");
        }
    }//GEN-LAST:event_deleteMovieButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMovieButton;
    private javax.swing.JButton deleteMovieButton;
    private javax.swing.JButton displayAllMovieButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JButton searchMovieButton;
    private javax.swing.JButton updateMovieButton;
    // End of variables declaration//GEN-END:variables
}
